{"version":3,"sources":["containers/UndoStack.js","reducers/index.js","store/index.js","components/helpers/ZoomableGroup.js","components/helpers/selectable.js","components/editor/EditorContent.js","components/editor/EditorCanvas.js","components/editor/EditorToolbar.js","actions/index.js","util/fileReader.js","components/editor/EditorMenu.js","components/editor/EditorItems.js","components/editor/EditorSettings.js","components/editor/Editor.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["UndoStack","self","this","stack","step","length","push","data","shift","splice","item","initialState","editorAction","editorGrid","editorGridSize","editorPaperSize","width","height","allowDragging","allowResizing","allowRotating","allowProportions","allowRestrictions","snapSteps","x","y","angle","eventBus","EventBus","undoStack","rootReducer","state","action","type","store","createStore","ZoomableGroup","props","zoomEl","useRef","useState","transform","setTransform","mouse","oldX","oldY","button","matrix","scale","pos","view","m","dirty","applyTo","update","join","toFixed","pan","amount","scaleAt","at","prescale","mouseEvent","useCallback","event","enable","el","current","clientX","clientY","preventDefault","events","e","offset","parentNode","getBoundingClientRect","left","top","deltaY","useEffect","map","eventName","eventFunc","addEventListener","passive","removeEventListener","id","ref","children","makeSelectable","svg","referenceElement","config","svgDragSelect","querySelector","selector","pointerEvent","dragAreaInClientCoordinate","dragAreaInSvgCoordinate","dragAreaInInitialSvgCoordinate","getEnclosures","getIntersections","filter","element","contains","target","SVGPathElement","i","len","getTotalLength","getPointAtLength","cancel","subjxConfiguration","container","controlsContainer","rotatorAnchor","rotatorOffset","EditorContainer","editable","selectable","items","currentGroup","ignoreStoring","nextProps","content","dropItems","childNodes","appendChild","firstChild","lastElementChild","removeChild","dropLayer","handleDropLayer","Boolean","makeSelectables","handleClick","bind","handleDoubleClick","handleKeyDown","handleUndo","handleRedo","reloadDraggables","document","classList","add","subscribeToEvents","tooltip","createElement","style","position","body","on","applyAlignment","value","calcTooltipPosition","startPoint","lineLength","lengthX","lengthY","theta","Math","atan2","PI","Number","cos","sin","subjx","drag","restrict","draggable","resizable","rotatable","proportions","snap","onInit","console","log","storage","handles","tr","tl","lx1","cx","baseVal","ly1","cy","lx2","ly2","nextX","nextY","createElementNS","setAttributeNS","actionButton","indexOf","disable","controls","onResize","dx","dy","setEditable","revX","revY","doW","doH","setItem","name","onMove","onRotate","delta","onDrop","setTimeout","display","next","onDestroy","remove","newItems","setDraggable","direction","root","onSelectionStart","selectionStart","onSelectionEnd","selectionEnd","onSelectionChange","selectionChange","find","child","stopPropagation","ctrlKey","pop","tagName","onLayerChange","getLayerPath","applyCurrentGroupOpacity","nextCurrentGroup","dropCurrentGroupOpacity","node","layerChain","getAttribute","nodeName","nextItems","keyCode","forEach","exeDrag","undo","handleAction","redo","revert","sjxEl","exeRotate","rest","exeResize","React","Component","connect","useStyles","makeStyles","flex","visibility","workArea","overflow","canvas","canvasContent","backgroundColor","page","boxShadow","layerBar","zIndex","margin","EditorCanvas","classes","rightOffset","initialW","initialH","window","outerWidth","outerHeight","paperWidth","paperHeight","w","h","paperSize","setPaperSize","canvasEl","controlsRef","workAreaRef","containerAreaRef","rootSVG","localAction","setLocalAction","layersBar","setLayersBar","setParentLayer","setStartPoint","setDropItems","scrollTop","clientHeight","scrollLeft","clientWidth","scrollToRef","svgPoint","elem","p","createSVGPoint","matrixTransform","getScreenCTM","inverse","drawElement","rect","drawArea1","getElementById","start","drawRect","abs","endDraw","className","Button","marginLeft","variant","color","size","onMouseUp","right","bottom","cursor","onMouseMove","onMouseDown","xmlns","fill","stroke","gridSize","grid","patternUnits","d","strokeWidth","vectorEffect","canvasGrid","EditorContent","div","defaultProps","mouseAction","alignItems","verticalDivider","toolbar","padding","marginRight","ExtendedButton","withStyles","IconButton","dispatch","$setEditorAction","act","$activateEditorGrid","setEditorAction","activateEditorGrid","buttons","selected","component","Layers","Navigation","PhotoSizeSelectSmall","PanTool","Search","emit","GridOn","GridOff","Undo","Redo","index","key","disabled","onClick","readText","filePath","Promise","resolve","reject","File","FileReader","FileList","Blob","reader","output","files","onload","result","readAsText","theme","justifyContent","extendedIcon","spacing","EditorMenu","fileSelector","setFileSelector","setAttribute","loadFiles","a","res","onImport","click","onExport","onClearArea","Rectangle","Circle","Shape","Text","Image","EditorItems","droppables","isCloneable","setAsCloneable","cloneConfig","appendTo","border","background","maxWidth","textColor","itemType","newItem","editorRef","rx","ry","strokeDasharray","points","clone","List","text","Icon","ListItem","data-type","ListItemIcon","ListItemText","primary","containerColumn","flexDirection","label","paddingLeft","TextInput","TextField","CheckboxLabel","FormControlLabel","$setEditorPaperSize","$setAllowDragging","$setAllowResizing","$setAllowRotating","$setAllowProportions","$setAllowRestrictions","$setSnapSteps","$setEditorGridSize","dragging","setDragging","resizing","setResizing","rotating","setRotating","setProportions","restrictions","setRestrictions","setSnap","handleChange","handleSettings","checked","handleSnapChange","snapValues","FormControl","FormGroup","aria-label","Typography","align","onChange","Grid","xs","Slider","valueLabelDisplay","val","Divider","control","Checkbox","labelPlacement","allowedSvgs","marginTop","minHeight","justifyItems","menu","palette","main","flexGrow","canvasContainer","appBar","borderTop","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerPaper","drawerOpen","drawerClose","overflowX","breakpoints","up","Editor","useTheme","open","setOpen","leftOffset","setLeftOffset","setContent","parsedStyleSheet","CSSStyleSheet","getStyleRule","cssText","rules","cssRules","selectorText","propertyName","parserOptions","replace","domNode","styleSheet","rule","insertRule","attribs","href","parent","childNode","class","reactSVGEl","parse","Array","isArray","ReactDOM","render","unmountComponentAtNode","attr","getAttributeNS","rootHTML","innerHTML","blob","saveAs","Date","toISOString","CssBaseline","Drawer","clsx","paper","edge","_","attrs","newNode","Object","entries","AppBar","topOffset","Main","outerTheme","createMuiTheme","auxiliary","contrastText","secondary","error","hover","warning","typography","fontSize","fontWeight","fontFamily","subtitle1","h6","lineHeight","h5","h4","overline","caption","MuiPaper","rounded","borderRadius","elevation1","elevation2","elevation4","App","ThemeProvider","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7d4a6ef.chunk.js","sourcesContent":["class UndoStack {\r\n\r\n    constructor(self) {\r\n        this.stack = [null];\r\n        this.step = -1;\r\n        this.self = self;\r\n    }\r\n\r\n    next() {\r\n        const { stack } = this;\r\n        if (stack[stack.length - 1] !== null) {\r\n            this.step++;\r\n            stack.push(null);\r\n        }\r\n    }\r\n\r\n    setItem(data) {\r\n        const { stack } = this;\r\n        stack[stack.length - 1] = data;\r\n\r\n        if (stack.length > 9) {\r\n            stack.shift();\r\n        };\r\n    }\r\n\r\n    push(data) {\r\n        this.step++;\r\n\r\n        this.stack.splice(this.step);\r\n        this.stack.push(data);\r\n    }\r\n\r\n    undo() {\r\n        let item;\r\n        const { stack } = this;\r\n\r\n        if (this.step >= 0) {\r\n            item = stack[this.step];\r\n            this.step--;\r\n            return item;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    redo() {\r\n        const { stack } = this;\r\n\r\n        this.step = this.step === -1 ? 0 : this.step;\r\n        if (stack.length - 1 > this.step) {\r\n            return stack[this.step++];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    invalidateAll() {\r\n        this.stack = [];\r\n        this.step = -1;\r\n    }\r\n\r\n}\r\n\r\nexport default UndoStack;","import EventBus from 'js-event-bus';\r\nimport UndoStack from '../containers/UndoStack';\r\n\r\nconst initialState = {\r\n    editorAction: 'edit',\r\n    editorGrid: true,\r\n    editorGridSize: 10,\r\n    editorPaperSize: {\r\n        width: 800,\r\n        height: 600\r\n    },\r\n    allowDragging: true,\r\n    allowResizing: true,\r\n    allowRotating: true,\r\n    allowProportions: true,\r\n    allowRestrictions: false,\r\n    snapSteps: {\r\n        x: 10,\r\n        y: 10,\r\n        angle: 15\r\n    },\r\n    eventBus: new EventBus(),\r\n    undoStack: new UndoStack()\r\n};\r\n\r\nfunction rootReducer(state = { ...initialState }, action) {\r\n    switch (action.type) {\r\n\r\n        case 'SET_EDITOR_ACTION':\r\n            return {\r\n                ...state,\r\n                editorAction: action.editorAction\r\n            };\r\n        case 'ACTIVATE_EDITOR_GRID':\r\n            return {\r\n                ...state,\r\n                editorGrid: action.editorGrid\r\n            };\r\n        case 'SET_EDITOR_GRID_SIZE':\r\n            return {\r\n                ...state,\r\n                editorGridSize: action.editorGridSize\r\n            };\r\n        case 'SET_EDITOR_PAPER_SIZE':\r\n            return {\r\n                ...state,\r\n                editorPaperSize: action.editorPaperSize\r\n            };\r\n        case 'SET_ALLOW_DRAGGING':\r\n            return {\r\n                ...state,\r\n                allowDragging: action.allowDragging\r\n            };\r\n        case 'SET_ALLOW_RESIZING':\r\n            return {\r\n                ...state,\r\n                allowResizing: action.allowResizing\r\n            };\r\n        case 'SET_ALLOW_ROTATING':\r\n            return {\r\n                ...state,\r\n                allowRotating: action.allowRotating\r\n            };\r\n        case 'SET_ALLOW_PROPORTIONS':\r\n            return {\r\n                ...state,\r\n                allowProportions: action.allowProportions\r\n            };\r\n        case 'SET_ALLOW_RESTRICTIONS':\r\n            return {\r\n                ...state,\r\n                allowRestrictions: action.allowRestrictions\r\n            };\r\n        case 'SET_SNAP_STEPS':\r\n            return {\r\n                ...state,\r\n                snapSteps: action.snapSteps\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React, { useEffect, useState, useRef, useCallback } from 'react';\n\nconst ZoomableGroup = (props) => {\n    let zoomEl = useRef(null);\n    const [transform, setTransform] = useState('matrix(1,0,0,1,0,0)');\n    const mouse = { x: 0, y: 0, oldX: 0, oldY: 0, button: false };\n    const matrix = [1, 0, 0, 1, 0, 0];\n    let scale = 1;\n    const pos = { x: 0, y: 0 };\n\n    const view = (() => {\n        const m = matrix;\n\n        let dirty = true;\n        const API = {\n            applyTo() {\n                if (dirty) { this.update(); }\n                setTransform(`matrix(${m.join(',')})`);\n            },\n            update() {\n                dirty = false;\n                m[3] = m[0] = scale.toFixed(5);\n                m[2] = m[1] = 0;\n                m[4] = pos.x.toFixed(5);\n                m[5] = pos.y.toFixed(5);\n            },\n            pan(amount) {\n                if (dirty) { this.update(); }\n                pos.x += amount.x;\n                pos.y += amount.y;\n                dirty = true;\n            },\n            scaleAt(at, amount) {\n                const prescale = scale * amount;\n                if (prescale < 0.4 || prescale > 5) return;\n\n                if (dirty) { this.update(); }\n                scale *= amount;\n                pos.x = at.x - (at.x - pos.x) * amount;\n                pos.y = at.y - (at.y - pos.y) * amount;\n                dirty = true;\n            }\n        };\n        return API;\n    })();\n\n    const mouseEvent = useCallback((event) => {\n        if (props.enable === false) return;\n        const el = zoomEl.current;\n        if (event.type === 'mousedown') { mouse.button = true; }\n        if (event.type === 'mouseup' || event.type === 'mouseout') { mouse.button = false; }\n        mouse.oldX = mouse.x;\n        mouse.oldY = mouse.y;\n        mouse.x = event.clientX;\n        mouse.y = event.clientY;\n        if (mouse.button) {\n            view.pan({ x: mouse.x - mouse.oldX, y: mouse.y - mouse.oldY });\n            view.applyTo(el);\n        }\n        event.preventDefault();\n    });\n\n    const mouseWheelEvent = useCallback((e) => {\n        if (props.enable === false) return;\n        const el = zoomEl.current;\n        const offset = el.parentNode.getBoundingClientRect();\n        const x = e.clientX - offset.left;\n        const y = e.clientY - offset.top;\n\n        view.scaleAt({ x, y }, e.deltaY < 0 ? 1.1 : (1 / 1.1));\n        view.applyTo(el);\n        e.preventDefault();\n    }, [props.enable]);\n\n    const resetZoom = useCallback(() => {\n        scale = 1;\n        pos.x = pos.y = 0;\n        matrix[0] = matrix[3] = 1;\n        matrix[1] = matrix[2] = matrix[4] = matrix[5] = 0;\n        view.pan(pos);\n        view.scaleAt({ x: 0, y: 0 }, 1);\n        view.applyTo(zoomEl.current);\n    });\n\n    const events = [\n        ['mousemove', mouseEvent],\n        ['mousedown', mouseEvent],\n        ['mouseup', mouseEvent],\n        ['mouseout', mouseEvent],\n        ['wheel', mouseWheelEvent],\n        ['dblclick', resetZoom]\n    ];\n\n    useEffect(() => {\n        const el = zoomEl.current;\n\n        if (props.enable) {\n            events.map(([eventName, eventFunc]) => {\n                el.parentNode.addEventListener(eventName, eventFunc, { passive: false });\n            });\n        }\n\n        return () => {\n            events.map(([eventName, eventFunc]) => {\n                el.parentNode.removeEventListener(eventName, eventFunc, { passive: false });\n            });\n        };\n    }, [props.enable]);\n\n    return (\n        <g id='zoom-container' ref={zoomEl} transform={transform}>\n            {props.children}\n        </g>\n    );\n};\n\nexport default ZoomableGroup;","import svgDragSelect from 'svg-drag-select';\n\nconst makeSelectable = (svg, referenceElement, config) => {\n    const strictIntersectionSelector = ({\n        svg,                            // the svg element.\n        referenceElement,               // please select only descendants of this SVGElement if specified.\n        pointerEvent,                   // a `PointerEvent` instance with either a \"pointerdown\" event or a \"pointermove\" event.\n        // (in case of Safari, a `MouseEvent` or a `TouchEvent` is used instead.)\n        dragAreaInClientCoordinate,     // a `SVGRect` that represents the dragging area in client coordinate.\n        dragAreaInSvgCoordinate,        // a `SVGRect` that represents the dragging area in svg coordinate.\n        dragAreaInInitialSvgCoordinate, // a `SVGRect` that represents the dragging area in initial viewport coordinate of the svg.\n        getEnclosures,                  // `getEnclosures()` returns elements enclosed in the dragging area.\n        getIntersections               // `getIntersections()` returns elements intersect the dragging area.\n        // Chrome, Safari and Firefox checks only bounding box intersection.\n    }) => getIntersections().filter(element => {\n        if (!referenceElement.contains(element)) return false;\n\n        // the element that the pointer event raised is considered to intersect.\n        if (pointerEvent.target === element) {\n            return true;\n        }\n        // strictly check only <path>s.\n        if (!(element instanceof SVGPathElement)) {\n            return true;\n        }\n        // check if there is at least one enclosed point in the path.\n        for (let i = 0, len = element.getTotalLength(); i <= len; i += 4 /* arbitrary */) {\n            const { x, y } = element.getPointAtLength(i);\n            if (\n                (\n                    dragAreaInSvgCoordinate.x <= x && x <= dragAreaInSvgCoordinate.x + dragAreaInSvgCoordinate.width &&\n                    dragAreaInSvgCoordinate.y <= y && y <= dragAreaInSvgCoordinate.y + dragAreaInSvgCoordinate.height\n                ) ||\n                (\n                    dragAreaInClientCoordinate.x <= x && x <= dragAreaInClientCoordinate.x + dragAreaInClientCoordinate.width &&\n                    dragAreaInClientCoordinate.y <= y && y <= dragAreaInClientCoordinate.y + dragAreaInClientCoordinate.height\n                )\n            ) {\n                return true;\n            }\n        }\n        return false;\n    });\n\n    const { cancel } = svgDragSelect({\n        svg,\n        referenceElement: referenceElement.querySelector('.isolated-layer'),\n        selector: strictIntersectionSelector,\n        ...config\n    });\n\n    return cancel;\n};\n\nexport default makeSelectable;","import React from 'react';\nimport { connect } from 'react-redux';\nimport subjx from 'subjx';\nimport makeSelectable from '../helpers/selectable';\n\nconst subjxConfiguration = {\n    container: '#editor-container',\n    controlsContainer: '#controls-container',\n    rotatorAnchor: 'n',\n    rotatorOffset: 30\n};\n\nconst mapStateToProps = (state) => ({\n    editorGridSize: state.editorGridSize,\n    allowDragging: state.allowDragging,\n    allowResizing: state.allowResizing,\n    allowRotating: state.allowRotating,\n    allowProportions: state.allowProportions,\n    allowRestrictions: state.allowRestrictions,\n    snapSteps: state.snapSteps,\n    eventBus: state.eventBus,\n    undoStack: state.undoStack\n});\n\nclass EditorContainer extends React.Component {\n\n    el = null;\n    editable = false;\n    selectable = null;\n    items = [];\n    currentGroup = null;\n    ignoreStoring = false;\n\n    shouldComponentUpdate(nextProps) {\n        if (this.el) {\n            if (nextProps.content !== this.props.content) {\n                this.dropItems();\n                this.currentGroup = this.el;\n\n                if (nextProps.content && nextProps.content.childNodes) {\n                    while (nextProps.content.childNodes.length) {\n                        this.el.appendChild(nextProps.content.firstChild);\n                    }\n                } else {\n                    while (this.el.lastElementChild) {\n                        this.el.removeChild(this.el.lastElementChild);\n                    }\n                }\n            }\n        }\n\n        if (nextProps.dropLayer) {\n            this.handleDropLayer();\n        }\n\n        if (\n            (nextProps.dropItems === true || !nextProps.editable) &&\n            this.items.length\n        ) {\n            this.dropItems();\n        }\n\n        if (nextProps.selectable !== Boolean(this.selectable)) {\n            if (nextProps.selectable) {\n                this.selectable = this.makeSelectables();\n            }\n            if (!nextProps.selectable && this.selectable) {\n                this.selectable();\n                this.selectable = null;\n            }\n        }\n\n        return false;\n        // (nextProps.content !== this.props.content) ||\n        //     nextProps.dropLayer ||\n        //     nextProps.dropItems ||\n        //     !nextProps.editable;\n    }\n\n    componentDidMount() {\n        this.currentGroup = this.el;\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleDoubleClick = this.handleDoubleClick.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleUndo = this.handleUndo.bind(this);\n        this.handleRedo = this.handleRedo.bind(this);\n        this.reloadDraggables = this.reloadDraggables.bind(this);\n\n        this.el.addEventListener('mouseup', this.handleClick);\n        this.el.addEventListener('dblclick', this.handleDoubleClick);\n        document.addEventListener('keydown', this.handleKeyDown);\n\n        this.el.classList.add('isolated-layer');\n\n        this.subscribeToEvents();\n\n        const tooltip = document.createElement('div');\n        tooltip.style.position = 'absolute';\n        tooltip.classList.add('drag-tooltip');\n        document.body.appendChild(tooltip);\n        this.tooltip = tooltip;\n    }\n\n    componentWillUnmount() {\n        this.el.removeEventListener('mouseup', this.handleClick);\n        this.el.removeEventListener('dblclick', this.handleDoubleClick);\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    subscribeToEvents() {\n        const { props: { eventBus } } = this;\n        eventBus.on('undo', this.handleUndo);\n        eventBus.on('redo', this.handleRedo);\n        eventBus.on('settingUpdated', this.reloadDraggables);\n\n        eventBus.on('alignLeft', () => this.applyAlignment('l'));\n        eventBus.on('alignRight', () => this.applyAlignment('r'));\n        eventBus.on('alignCenter', () => this.applyAlignment('h'));\n    }\n\n    setEditable(value) {\n        this.editable = value;\n    }\n\n    setDraggable(target) {\n        const self = this;\n        const {\n            items,\n            props\n        } = this;\n\n        const {\n            undoStack,\n            allowDragging,\n            allowResizing,\n            allowRotating,\n            allowProportions,\n            allowRestrictions,\n            snapSteps\n        } = props;\n\n        const calcTooltipPosition = (startPoint, lineLength, offset, angle) => {\n            const [x, y] = startPoint;\n            const [lengthX, lengthY] = lineLength;\n\n            const theta = Math.atan2(\n                lengthY,\n                lengthX\n            ) - (angle * Math.PI / 180);\n\n            return [\n                Number(x) + offset * Math.cos(theta),\n                Number(y) + offset * Math.sin(theta)\n            ];\n        };\n\n        return subjx(target).drag({\n            ...subjxConfiguration,\n            ...(allowRestrictions && { restrict: '#editor-grid' }),\n            draggable: allowDragging,\n            resizable: allowResizing,\n            rotatable: allowRotating,\n            proportions: allowProportions,\n            snap: {\n                x: snapSteps.x,\n                y: snapSteps.y,\n                angle: snapSteps.y\n            },\n            onInit() {\n                // eslint-disable-next-line no-console\n                console.log('Draggable:: ', this.el);\n                const { tr, tl } = this.storage.handles;\n\n                const lx1 = tl.cx.baseVal.value;\n                const ly1 = tl.cy.baseVal.value;\n                const lx2 = tr.cx.baseVal.value;\n                const ly2 = tr.cy.baseVal.value;\n\n                const lineLength = [lx1 - lx2, ly1 - ly2];\n\n                const [nextX, nextY] = calcTooltipPosition(\n                    [lx2, ly2],\n                    lineLength,\n                    -30,\n                    45\n                );\n\n                const tooltip = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n                tooltip.setAttributeNS(null, 'transform', `translate(${nextX - 12}, ${nextY - 12})`);\n                tooltip.classList.add('delete-sjx-item');\n\n                const actionButton = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                actionButton.setAttributeNS(null, 'd', 'M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8');\n                actionButton.setAttributeNS(null, 'pointer-events', 'bounding-box');\n                actionButton.setAttributeNS(null, 'fill', 'rgb(237, 28, 36)');\n\n                tooltip.addEventListener('click', () => {\n                    items.splice(items.indexOf(this), 1);\n                    this.disable();\n                    this.el.parentNode.removeChild(this.el);\n                });\n                tooltip.appendChild(actionButton);\n\n                this.controls.appendChild(tooltip);\n            },\n            onResize({ dx, dy }) {\n                self.setEditable(true);\n\n                const { tr, tl } = this.storage.handles;\n\n                const lx1 = tl.cx.baseVal.value;\n                const ly1 = tl.cy.baseVal.value;\n                const lx2 = tr.cx.baseVal.value;\n                const ly2 = tr.cy.baseVal.value;\n\n                const lineLength = [lx1 - lx2, ly1 - ly2];\n\n                const [nextX, nextY] = calcTooltipPosition(\n                    [lx2, ly2],\n                    lineLength,\n                    -30,\n                    45\n                );\n\n                const tooltip = this.controls.querySelector('.delete-sjx-item');\n                tooltip.setAttributeNS(null, 'transform', `translate(${nextX - 12}, ${nextY - 12})`);\n\n                if (self.ignoreStoring) return self.ignoreStoring = false;\n                const { revX, revY, doW, doH } = this.storage;\n\n                undoStack.setItem({\n                    name: 'resize',\n                    el: this.el,\n                    data: {\n                        dx,\n                        dy,\n                        revX,\n                        revY,\n                        doW,\n                        doH\n                    }\n                });\n            },\n            onMove({ dx, dy }) {\n                self.setEditable(true);\n\n                if (self.ignoreStoring) return self.ignoreStoring = false;\n                undoStack.setItem({ name: 'move', el: this.el, data: [dx, dy] });\n            },\n            onRotate({ clientX, clientY, transform, delta }) {\n                self.setEditable(true);\n\n                if (self.ignoreStoring) return self.ignoreStoring = false;\n                undoStack.setItem({\n                    name: 'rotate', data: delta, el: this.el\n                });\n            },\n            onDrop() {\n                setTimeout(() => (\n                    self.setEditable(false)\n                ), 100);\n                self.tooltip.style.display = 'none';\n\n                if (self.ignoreStoring) return self.ignoreStoring = false;\n                undoStack.next();\n            },\n            onDestroy() {\n                setTimeout(() => (\n                    self.setEditable(false)\n                ), 100);\n                this.el.classList.remove('subjx-selected');\n            }\n        });\n    }\n\n    reloadDraggables() {\n        const { items } = this;\n        const newItems = items.map((item) => {\n            item.disable();\n            return item.el;\n        });\n\n        this.items = [...this.setDraggable(newItems)];\n    }\n\n    applyAlignment(direction) {\n        this.items.map((item) => item.applyAlignment(direction));\n    }\n\n    makeSelectables() {\n        const selectableConfig = {\n            onSelectionStart(selectionStart) {\n                // [...selectionStart.svg.querySelectorAll('[data-selected]')].forEach((element) => (\n                //     element.removeAttribute('data-selected')\n                // ));\n            },\n            onSelectionEnd(selectionEnd) {\n                // [...selectionEnd.svg.querySelectorAll('[data-selected]')].forEach((element) => (\n                //     element.removeAttribute('data-selected')\n                // ));\n            },\n            onSelectionChange(selectionChange) {\n                // selectionChange.newlyDeselectedElements.forEach((element) => {\n                //     element.removeAttribute('data-selected');\n                // });\n\n                // selectionChange.newlySelectedElements.forEach((element) => {\n                //     element.setAttribute('data-selected', '');\n                // });\n            }\n        };\n\n        return makeSelectable(\n            this.props.root.current,\n            this.el.parentNode,\n            selectableConfig\n        );\n    }\n\n    handleClick(e) {\n        if (this.editable || !this.props.editable) return;\n\n        const {\n            currentGroup,\n            items\n        } = this;\n\n        const target = [...currentGroup.childNodes]\n            .find((child) => (\n                !(child.classList && child.classList.contains('sjx-drag')) &&\n                child.contains(e.target)\n            )) || (currentGroup === e.target ? e.target : null);\n\n        //console.log('Target:: ', target);\n        //console.log('Current group:: ', currentGroup);\n\n        if (!target) return;\n\n        e.stopPropagation();\n\n        if (!e.ctrlKey) {\n            while (items.length > 0) items.pop().disable();\n        }\n\n        const newItems = this.setDraggable(target);\n\n        items.push(...newItems);\n        this.items = items;\n    }\n\n    handleDoubleClick(e) {\n        if (this.editable || !this.props.editable) return;\n        const { currentGroup } = this;\n\n        const target = [...currentGroup.childNodes]\n            .find((child) => (\n                (child.classList && child.classList.contains('sjx-drag')) &&\n                child.contains(e.target)\n            ));\n\n        if (target && target.tagName === 'g') {\n            this.dropItems();\n            this.currentGroup = target;\n            this.props.onLayerChange(\n                this.getLayerPath(target)\n            );\n            currentGroup.classList.remove('isolated-layer');\n            target.classList.add('isolated-layer');\n            this.applyCurrentGroupOpacity(target);\n        }\n    }\n\n    handleDropLayer() {\n        const { currentGroup } = this;\n        if (currentGroup === this.el) return;\n\n        this.dropItems();\n        currentGroup.classList.remove('isolated-layer');\n        const nextCurrentGroup = currentGroup.parentNode;\n        this.currentGroup = nextCurrentGroup;\n        this.props.onLayerChange(\n            this.getLayerPath(nextCurrentGroup)\n        );\n\n        this.dropCurrentGroupOpacity(currentGroup);\n        this.applyCurrentGroupOpacity(nextCurrentGroup);\n        nextCurrentGroup.classList.add('isolated-layer');\n    }\n\n    getLayerPath(target) {\n        let node = target;\n        let layerChain = '';\n\n        while (node !== this.el) {\n            layerChain = (node.getAttribute('id') || node.nodeName) + ' / ' + layerChain;\n            node = node.parentNode;\n        }\n\n        return layerChain;\n    }\n\n    dropItems(nextItems = []) {\n        const { items } = this;\n        while (items.length > 0) items.pop().disable();\n        this.items = nextItems;\n    }\n\n    handleKeyDown(e) {\n        const { items } = this;\n        if (e.keyCode === 46) {\n            while (items.length > 0) {\n                const item = items.pop();\n                item.disable();\n                item.el.parentNode.removeChild(item.el);\n            }\n        } else if (e.keyCode === 65 && e.ctrlKey) {\n            while (items.length > 0) items.pop().disable();\n            e.preventDefault();\n        } else if (e.keyCode === 67) {\n            // c\n        } else if (e.keyCode === 86) {\n            // v\n        } else if (e.keyCode > 36 && e.keyCode < 41) {\n            e.preventDefault();\n            items.forEach((item) => {\n                item.exeDrag({\n                    dx: e.keyCode === 37 || e.keyCode === 39 ? e.keyCode === 37 ? -10 : 10 : 0,\n                    dy: e.keyCode === 38 || e.keyCode === 40 ? e.keyCode === 38 ? -10 : 10 : 0\n                });\n            });\n        }\n    }\n\n    applyCurrentGroupOpacity(el) {\n        el.setAttributeNS(null, 'opacity', 1);\n        if (el === this.el) return;\n        [...el.parentNode.childNodes].forEach(child => {\n            if (child.tagName === 'g' && child !== el) child.setAttributeNS(null, 'opacity', 0.3);\n        });\n        this.applyCurrentGroupOpacity(el.parentNode);\n    }\n\n    dropCurrentGroupOpacity(el) {\n        [...el.parentNode.childNodes].forEach(child => {\n            if (child.tagName === 'g' && child !== el) child.setAttributeNS(null, 'opacity', 1);\n        });\n    }\n\n    handleUndo() {\n        const { undoStack } = this.props;\n\n        const item = undoStack.undo();\n\n        if (item) {\n            this.ignoreStoring = true;\n            this.handleAction(item, true);\n        }\n    }\n\n    handleRedo() {\n        const { undoStack } = this.props;\n\n        const item = undoStack.redo();\n\n        if (item) {\n            this.ignoreStoring = true;\n            this.handleAction(item, false);\n        }\n    }\n\n    handleAction(action = {}, revert) {\n        this.dropItems();\n\n        switch (action.name) {\n\n            case 'rotate': {\n                const delta = action.data;\n                const sjxEl = this.setDraggable(action.el);\n\n                sjxEl.forEach((item) => {\n                    item.exeRotate({ delta: delta * (revert ? -1 : 1) });\n                    item.disable();\n                });\n\n                break;\n            }\n            case 'move': {\n                const [dx, dy] = action.data;\n                const sjxEl = this.setDraggable(action.el);\n\n                sjxEl.forEach((item) => {\n                    item.exeDrag({\n                        dx: dx * (revert ? -1 : 1),\n                        dy: dy * (revert ? -1 : 1)\n                    });\n                    item.disable();\n                });\n                break;\n            }\n            case 'resize': {\n                const { dx, dy, ...rest } = action.data;\n                const sjxEl = this.setDraggable(action.el);\n\n                sjxEl.forEach((item) => {\n                    item.exeResize({\n                        dx: dx * (revert ? -1 : 1),\n                        dy: dy * (revert ? -1 : 1),\n                        ...rest\n                    });\n                    item.disable();\n                });\n            }\n            default:\n                break;\n\n        }\n    }\n\n    render() {\n        return (\n            <g id='editable-content' ref={el => this.el = el} />\n        );\n    }\n\n}\n\nexport default connect(mapStateToProps)(EditorContainer);","import React, { useState, useRef, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport ZoomableGroup from '../helpers/ZoomableGroup';\r\nimport EditorContent from './EditorContent';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        '-webkit-box-flex': 1,\r\n        '-ms-flex': 1,\r\n        flex: 1,\r\n        visibility: 'visible'\r\n    },\r\n    workArea: {\r\n        overflow: 'auto'\r\n    },\r\n    canvas: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    },\r\n    canvasContent: {\r\n        backgroundColor: 'white'\r\n    },\r\n    page: {\r\n        boxShadow: '0px 0px 2px 1px #d1d1d1'\r\n    },\r\n    layerBar: {\r\n        position: 'absolute',\r\n        zIndex: 99999,\r\n        margin: 4\r\n    }\r\n}));\r\n\r\nconst canvasGrid = (paperSize, gridSize) => {\r\n    const grid = gridSize * 10;\r\n    return (\r\n        <g>\r\n            <defs>\r\n                <pattern\r\n                    id='smallGrid'\r\n                    width={gridSize}\r\n                    height={gridSize}\r\n                    fill='white'\r\n                    patternUnits='userSpaceOnUse'\r\n                >\r\n                    <path\r\n                        d={`M ${gridSize} 0 L 0 0 0 ${gridSize}`}\r\n                        fill='none'\r\n                        stroke='gray'\r\n                        strokeWidth='0.5'\r\n                        vectorEffect='non-scaling-stroke'\r\n                    />\r\n                </pattern>\r\n                <pattern id='grid' width={grid} height={grid} patternUnits='userSpaceOnUse'>\r\n                    <rect width={grid} height={grid} fill='url(#smallGrid)' />\r\n                    <path\r\n                        d={`M ${grid} 0 L 0 0 0 ${grid}`}\r\n                        fill='none'\r\n                        stroke='gray'\r\n                        strokeWidth='1'\r\n                        vectorEffect='non-scaling-stroke'\r\n                    />\r\n                </pattern>\r\n            </defs>\r\n            <rect x='0' y='0' width={paperSize.w} height={paperSize.h} fill='url(#grid)' />\r\n        </g>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        editorAction: state.editorAction,\r\n        editorGrid: state.editorGrid,\r\n        editorGridSize: state.editorGridSize,\r\n        editorPaperSize: state.editorPaperSize\r\n    };\r\n};\r\n\r\nconst EditorCanvas = (props) => {\r\n    const classes = useStyles();\r\n    const {\r\n        editorAction,\r\n        editorGrid,\r\n        editorGridSize,\r\n        editorPaperSize,\r\n        // leftOffset,\r\n        // topOffset,\r\n        rightOffset,\r\n        children: content\r\n    } = props;\r\n\r\n    const {\r\n        width: initialW,\r\n        height: initialH\r\n    } = editorPaperSize;\r\n\r\n    const [paperWidth, paperHeight] = [window.outerWidth, window.outerHeight];\r\n\r\n    const [paperSize, setPaperSize] = useState({\r\n        w: initialW,\r\n        h: initialH,\r\n        x: (paperWidth - initialW) / 2,\r\n        y: (paperHeight - initialH) / 2\r\n    });\r\n\r\n    // const {\r\n    //     props: {\r\n    //         x: contentLeft,\r\n    //         y: contentTop,\r\n    //         width: contentWidth = paperSize.w,\r\n    //         height: contentHeight = paperSize.h,\r\n    //         viewBox: contentViewBox\r\n    //     } = {}\r\n    // } = content || {};\r\n\r\n    let canvasEl = null;\r\n    let controlsRef = null;\r\n    const workAreaRef = useRef(null);\r\n    const containerAreaRef = useRef(null);\r\n    const rootSVG = useRef(null);\r\n\r\n    const [localAction, setLocalAction] = useState(null);\r\n    const [layersBar, setLayersBar] = useState(null);\r\n    const [dropLayer, setParentLayer] = useState(false);\r\n    const [startPoint, setStartPoint] = useState({ x: 0, y: 0 });\r\n\r\n    const [dropItems, setDropItems] = useState(false);\r\n\r\n    const scrollToRef = (ref) => {\r\n        const container = containerAreaRef.current;\r\n        container.scrollTop = (ref.current.clientHeight - container.clientHeight) / 2;\r\n        container.scrollLeft = (ref.current.clientWidth - container.clientWidth) / 2;\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToRef(workAreaRef);\r\n    }, [paperSize]);\r\n\r\n    // TODO: adopt to size of imported SVG\r\n    // useEffect(() => {\r\n    //     setPaperSize({\r\n    //         w: contentWidth > initialW ? contentWidth : initialW,\r\n    //         h: contentHeight > initialH ? contentHeight : initialH,\r\n    //         x: contentWidth > initialW ?  (paperWidth - contentWidth) / 2 : (paperWidth - initialW) / 2,\r\n    //         y: contentHeight > initialH ? (paperHeight - contentHeight) / 2 : (paperHeight - initialH) / 2\r\n    //     });\r\n    // }, [props.children]);\r\n\r\n    useEffect(() => {\r\n        setPaperSize({\r\n            w: initialW,\r\n            h: initialH,\r\n            x: (paperWidth - initialW) / 2,\r\n            y: (paperHeight - initialH) / 2\r\n        });\r\n    }, [props.editorPaperSize]);\r\n\r\n    const handleMouseDown = (e) => {\r\n        e.preventDefault();\r\n        switch (editorAction) {\r\n\r\n            case 'edit':\r\n                if (controlsRef.contains(e.target)) return;\r\n\r\n                if (!canvasEl.children[0].contains(e.target)) {\r\n                    setDropItems(true);\r\n                    return setTimeout(() => setDropItems(false), 100);\r\n                }\r\n                break;\r\n            case 'grab':\r\n                const container = containerAreaRef.current;\r\n\r\n                setStartPoint({\r\n                    x: e.clientX,\r\n                    y: e.clientY,\r\n                    scrollTop: container.scrollTop,\r\n                    scrollLeft: container.scrollLeft\r\n                });\r\n                break;\r\n            case 'select':\r\n                //onCanvasDown(e);\r\n                break;\r\n            case 'zoom':\r\n                break;\r\n            case 'drawRect':\r\n                drawElement(e);\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        setLocalAction(editorAction);\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        e.preventDefault();\r\n\r\n        switch (localAction) {\r\n\r\n            case 'grab': {\r\n                const dx = (startPoint.x - e.clientX) * 1; // scale\r\n                const dy = (startPoint.y - e.clientY) * 1; // scale\r\n\r\n                const container = containerAreaRef.current;\r\n                container.scrollTop = startPoint.scrollTop + dy;\r\n                container.scrollLeft = startPoint.scrollLeft + dx;\r\n                break;\r\n            }\r\n            case 'zoom': {\r\n                break;\r\n            }\r\n            case 'draw':\r\n                //drawSvgElement(e);\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n        setLocalAction(null);\r\n    };\r\n\r\n    const dropLayers = (e) => {\r\n        e.stopPropagation();\r\n        setParentLayer(true);\r\n    };\r\n\r\n    const svgPoint = (elem, x, y) => {\r\n        let p = elem.createSVGPoint();\r\n        p.x = x;\r\n        p.y = y;\r\n        return p.matrixTransform(elem.getScreenCTM().inverse());\r\n    };\r\n\r\n    const drawElement = (event) => {\r\n        const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\r\n        rect.setAttributeNS(null, 'stroke-width', 2);\r\n        rect.setAttributeNS(null, 'fill', 'none');\r\n        rect.setAttributeNS(null, 'stroke', '#000');\r\n\r\n        const drawArea1 = document.getElementById('editor-background');\r\n\r\n        const start = svgPoint(drawArea1, event.clientX, event.clientY);\r\n        document.getElementById('editable-content').appendChild(rect);\r\n\r\n        const drawRect = (e) => {\r\n            let p = svgPoint(drawArea1, e.clientX, e.clientY);\r\n            let w = Math.abs(p.x - start.x);\r\n            let h = Math.abs(p.y - start.y);\r\n            if (p.x > start.x) {\r\n                p.x = start.x;\r\n            }\r\n\r\n            if (p.y > start.y) {\r\n                p.y = start.y;\r\n            }\r\n\r\n            rect.setAttributeNS(null, 'x', p.x);\r\n            rect.setAttributeNS(null, 'y', p.y);\r\n            rect.setAttributeNS(null, 'width', w);\r\n            rect.setAttributeNS(null, 'height', h);\r\n        };\r\n\r\n        const endDraw = () => {\r\n            drawArea1.removeEventListener('mousemove', drawRect);\r\n            drawArea1.removeEventListener('mouseup', endDraw);\r\n        };\r\n\r\n        drawArea1.addEventListener('mousemove', drawRect);\r\n        drawArea1.addEventListener('mouseup', endDraw);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {\r\n                layersBar && (\r\n                    <p className={classes.layerBar}>\r\n                        {layersBar}\r\n                        <Button\r\n                            style={{ marginLeft: 2 }}\r\n                            variant='contained'\r\n                            color='primary'\r\n                            size='small'\r\n                            onMouseUp={dropLayers}>\r\n                            Exit\r\n                        </Button>\r\n                    </p>\r\n                )\r\n            }\r\n            <div\r\n                id='work-area'\r\n                ref={containerAreaRef}\r\n                className={classes.workArea}\r\n                style={{\r\n                    top: 0, // topOffset,\r\n                    left: 0, // leftOffset,\r\n                    right: rightOffset,\r\n                    bottom: 0,\r\n                    position: 'absolute',\r\n                    cursor: 'auto',\r\n                    overflow: 'scroll'\r\n                }}\r\n                onMouseMove={handleMouseMove}\r\n                onMouseDown={handleMouseDown}\r\n                onMouseUp={handleMouseUp}\r\n            >\r\n                <div\r\n                    ref={workAreaRef}\r\n                    style={{\r\n                        display: 'inline-block',\r\n                        position: 'relative',\r\n                        width: paperWidth,\r\n                        height: paperHeight\r\n                    }}\r\n                >\r\n                    <svg\r\n                        id='editor-container'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        className={classes.canvas}\r\n                        width='100%'\r\n                        height='100%'\r\n                        overflow='visible'\r\n                        ref={rootSVG}\r\n                    >\r\n                        <ZoomableGroup enable={editorAction === 'zoom'}>\r\n                            <g id='content' transform={`translate(${paperSize.x}, ${paperSize.y})`}>\r\n                                <g id='editor-background'>\r\n                                    <rect id='editor-grid' x='0' y='0' width={paperSize.w} height={paperSize.h} fill='white' stroke='grey' />\r\n                                    {\r\n                                        editorGrid\r\n                                            ? canvasGrid(paperSize, editorGridSize)\r\n                                            : null\r\n                                    }\r\n                                </g>\r\n                                <g\r\n                                    id='editor-canvas'\r\n                                    ref={el => canvasEl = el}\r\n                                    className={classes.page}\r\n                                >\r\n                                    <EditorContent\r\n                                        root={rootSVG}\r\n                                        editable={editorAction === 'edit'}\r\n                                        selectable={editorAction === 'select'}\r\n                                        content={content}\r\n                                        onLayerChange={(value) => {\r\n                                            setLayersBar(value);\r\n                                            setParentLayer(false);\r\n                                        }}\r\n                                        dropLayer={dropLayer}\r\n                                        dropItems={dropItems}\r\n                                    />\r\n                                </g>\r\n                            </g>\r\n                        </ZoomableGroup>\r\n                        <g id='controls-container' ref={div => controlsRef = div} />\r\n                    </svg>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nEditorCanvas.defaultProps = {\r\n    grid: true,\r\n    mouseAction: 'edit',\r\n    initialW: 800,\r\n    initialH: 600\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditorCanvas);","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport {\r\n    Layers as LayersIcon,\r\n    FormatAlignLeft as AlignLeft,\r\n    FormatAlignCenter as AlignCenter,\r\n    FormatAlignRight as AlignRight,\r\n    GridOn as GridOnIcon,\r\n    GridOff as GridOffIcon,\r\n    Undo as UndoIcon,\r\n    Redo as RedoIcon,\r\n    Navigation as NavigationIcon,\r\n    PanTool as PanToolIcon,\r\n    PhotoSizeSelectSmall as PhotoSizeSelectSmallIcon,\r\n    Search as SearchIcon,\r\n    Crop32Outlined as Rectangle\r\n} from '@material-ui/icons';\r\n\r\nimport { setEditorAction, activateEditorGrid } from '../../actions';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        marginLeft: 10\r\n    },\r\n    verticalDivider: {\r\n        width: '1px',\r\n        backgroundColor: 'white',\r\n        height: '30px'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: 2,\r\n        marginRight: 5\r\n    }\r\n}));\r\n\r\nconst ExtendedButton = withStyles({\r\n    root: {\r\n        color: 'rgba(0,0,0,0.65)',\r\n        padding: 6\r\n    }\r\n})(IconButton);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        editorAction: state.editorAction,\r\n        editorGrid: state.editorGrid,\r\n        eventBus: state.eventBus\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    $setEditorAction: (act) => dispatch(setEditorAction(act)),\r\n    $activateEditorGrid: (act) => dispatch(activateEditorGrid(act))\r\n});\r\n\r\nconst EditorToolbar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { \r\n        editorAction,\r\n        editorGrid,\r\n        eventBus\r\n    } = props;\r\n\r\n    const setEditorAction = (editorAction) => () => {\r\n        props.$setEditorAction({ editorAction });\r\n    };\r\n\r\n    const activateEditorGrid = (editorGrid) => {\r\n        props.$activateEditorGrid({ editorGrid });\r\n    };\r\n\r\n    const buttons = [\r\n        { type: 'button', selected: editorAction === 'showLayers', component: <LayersIcon />, action: () => 'showLayers' },\r\n        { type: 'divider' },\r\n        { type: 'button', selected: editorAction === 'edit', component: <NavigationIcon />, action: setEditorAction('edit') },\r\n        { type: 'button', selected: editorAction === 'select', component: <PhotoSizeSelectSmallIcon />, action: setEditorAction('select') },\r\n        { type: 'button', selected: editorAction === 'grab', component: <PanToolIcon />, action: setEditorAction('grab') },\r\n        { type: 'button', selected: editorAction === 'zoom', component: <SearchIcon />, action: setEditorAction('zoom') },\r\n        { type: 'divider' },\r\n        // { type: 'button', selected: editorAction === 'zoom', component: <Rectangle />, action: setEditorAction('drawRect') },\r\n        // { type: 'divider' },\r\n        { type: 'button', selected: editorAction === 'alignLeft', component: <AlignLeft />, action: () => eventBus.emit('alignLeft') },\r\n        { type: 'button', selected: editorAction === 'alignCenter', component: <AlignCenter />, action: () => eventBus.emit('alignCenter') },\r\n        { type: 'button', selected: editorAction === 'alignRight', component: <AlignRight />, action: () => eventBus.emit('alignRight') },\r\n        { type: 'divider' },\r\n        { type: 'button', selected: editorGrid === true, component: <GridOnIcon />, action: () => activateEditorGrid(true) },\r\n        { type: 'button', selected: editorGrid === false, component: <GridOffIcon />, action: () => activateEditorGrid(false) },\r\n        { type: 'divider' },\r\n        { type: 'button', selected: false, component: <UndoIcon />, action: () => eventBus.emit('undo') },\r\n        { type: 'button', selected: false, component: <RedoIcon />, action: () => eventBus.emit('redo') }\r\n    ];\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {buttons.map(({ type, component, action, selected, value }, index) => (\r\n                <div key={`${index}button`} className={classes.toolbar}>{\r\n                    type !== 'divider'\r\n                        ? <ExtendedButton disabled={selected} onClick={() => action()}>{component}</ExtendedButton>\r\n                        : <div className={classes.verticalDivider} />\r\n                }</div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorToolbar);","export function setEditorAction({ editorAction }) {\r\n    return { type: 'SET_EDITOR_ACTION', editorAction };\r\n}\r\n\r\nexport function activateEditorGrid({ editorGrid }) {\r\n    return { type: 'ACTIVATE_EDITOR_GRID', editorGrid };\r\n}\r\n\r\nexport function setEditorGridSize({ editorGridSize }) {\r\n    return { type: 'SET_EDITOR_GRID_SIZE', editorGridSize };\r\n}\r\n\r\nexport function setEditorPaperSize({ editorPaperSize }) {\r\n    return { type: 'SET_EDITOR_PAPER_SIZE', editorPaperSize };\r\n}\r\n\r\nexport function setAllowDragging({ allowDragging }) {\r\n    return { type: 'SET_ALLOW_DRAGGING', allowDragging };\r\n}\r\n\r\nexport function setAllowResizing({ allowResizing }) {\r\n    return { type: 'SET_ALLOW_RESIZING', allowResizing };\r\n}\r\n\r\nexport function setAllowRotating({ allowRotating }) {\r\n    return { type: 'SET_ALLOW_ROTATING', allowRotating };\r\n}\r\n\r\nexport function setAllowProportions({ allowProportions }) {\r\n    return { type: 'SET_ALLOW_PROPORTIONS', allowProportions };\r\n}\r\n\r\nexport function setAllowRestrictions({ allowRestrictions }) {\r\n    return { type: 'SET_ALLOW_RESTRICTIONS', allowRestrictions };\r\n}\r\n\r\nexport function setSnapSteps({ snapSteps }) {\r\n    return { type: 'SET_SNAP_STEPS', snapSteps };\r\n}","export function readText(filePath) {\r\n    return new Promise((resolve, reject) => {\r\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n            const reader = new FileReader();\r\n            let output = '';\r\n            if (filePath.files && filePath.files[0]) {\r\n                reader.onload = (e) => {\r\n                    output = e.target.result;\r\n                    resolve(output);\r\n                };\r\n                reader.readAsText(filePath.files[0]);\r\n            }\r\n        } else {\r\n            reject();\r\n        }\r\n    });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ImportIcon from '@material-ui/icons/GetApp';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport { readText } from '../../util/fileReader';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: '0 8px'\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst ExtendedButton = withStyles({\r\n    root: {\r\n        color: '#fff',\r\n        marginRight: '10px'\r\n    }\r\n})(IconButton);\r\n\r\nconst EditorMenu = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [fileSelector, setFileSelector] = useState(\r\n        document.createElement('input')\r\n    );\r\n\r\n    useEffect(() => {\r\n        const fileSelector = document.createElement('input');\r\n        fileSelector.setAttribute('type', 'file');\r\n        fileSelector.setAttribute('accept', 'image/*');\r\n        fileSelector.setAttribute('id', 'file-upload');\r\n        fileSelector.style.display = 'none';\r\n\r\n        setFileSelector(fileSelector);\r\n\r\n        const loadFiles = async (e) => {\r\n            try {\r\n                const res = await readText(e.target);\r\n                props.onImport(res);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        fileSelector.addEventListener('change', loadFiles, false);\r\n    }, [props]);\r\n\r\n    const handleFileSelect = (e) => {\r\n        fileSelector.click();\r\n        e.preventDefault();\r\n        e.target.value = '';\r\n    };\r\n\r\n    const handleExportFile = () => {\r\n        props.onExport();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ExtendedButton onClick={handleFileSelect}>\r\n                <ImportIcon />\r\n            </ExtendedButton>\r\n            <ExtendedButton onClick={handleExportFile}>\r\n                <SaveIcon />\r\n            </ExtendedButton>\r\n            <ExtendedButton onClick={() => props.onClearArea()}>\r\n                <Delete />\r\n            </ExtendedButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditorMenu;","import React, { useState, useEffect } from 'react';\r\nimport subjx from 'subjx';\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText\r\n} from '@material-ui/core';\r\nimport {\r\n    Crop32Outlined as Rectangle,\r\n    RadioButtonUnchecked as Circle,\r\n    GradeOutlined as Shape,\r\n    CropOriginalOutlined as Image,\r\n    FormatShapes as Text\r\n} from '@material-ui/icons';\r\n\r\nconst items = [\r\n    ['rectangle', Rectangle],\r\n    ['circle', Circle],\r\n    ['shape', Shape],\r\n    ['text', Text],\r\n    ['image', Image]\r\n];\r\n\r\nconst EditorItems = (props) => {\r\n    const droppables = [];\r\n    const [isCloneable, setAsCloneable] = useState(false);\r\n\r\n    const cloneConfig = {\r\n        appendTo: 'body',\r\n        stack: '#editor-background',\r\n        style: {\r\n            border: 'none',\r\n            background: 'transparent',\r\n            maxWidth: '150px',\r\n            textColor: 'transparent'\r\n        },\r\n        onInit() {},\r\n        onDrop(e) {\r\n            const itemType = this.el.getAttribute('data-type');\r\n            let newItem = null;\r\n\r\n            const editorRef = document.querySelector('#editor-background');\r\n\r\n            const offset = editorRef.getBoundingClientRect(),\r\n                x = e.clientX - offset.left + editorRef.scrollLeft,\r\n                y = e.clientY - offset.top + editorRef.scrollTop;\r\n\r\n            switch (itemType) {\r\n\r\n                case 'rectangle':\r\n                    newItem = [\r\n                        'rect',\r\n                        {\r\n                            x,\r\n                            y,\r\n                            width: 150,\r\n                            height: 100,\r\n                            stroke: 'black',\r\n                            fill: 'transparent'\r\n                        }\r\n                    ];\r\n                    break;\r\n                case 'circle':\r\n                    newItem = [\r\n                        'ellipse',\r\n                        {\r\n                            cx: x,\r\n                            cy: y,\r\n                            rx: 45,\r\n                            ry: 45,       \r\n                            stroke: 'black',\r\n                            fill: 'transparent'\r\n                        }\r\n                    ];\r\n                    break;\r\n                case 'shape':\r\n                    newItem = [\r\n                        'polygon',\r\n                        {\r\n                            strokeWidth: \"3\",\r\n                            stroke: 'black',\r\n                            fill: \"transparent\",\r\n                            strokeDasharray: \"0\",\r\n                            points: \"80,0 160,50 80,100 0,50\"\r\n                        },\r\n                        []\r\n                    ];\r\n                    break;\r\n                case 'image':\r\n                    newItem = [\r\n                        'foreignObject',\r\n                        {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                            width: 150,\r\n                            height: 100,\r\n                            stroke: 'black',\r\n                            fill: 'transparent'\r\n                        },\r\n                        [\r\n                            [\r\n                                'div',\r\n                                {\r\n                                    display: 'block'\r\n                                },\r\n                                []\r\n                            ]\r\n                        ]\r\n                    ];\r\n                    break;\r\n                case 'text':\r\n                    newItem = [\r\n                        'foreignObject',\r\n                        {\r\n                            x: e.clientX,\r\n                            y: e.clientY,\r\n                            width: 150,\r\n                            height: 100,\r\n                            stroke: 'black',\r\n                            fill: 'transparent'\r\n                        },\r\n                        []\r\n                    ];\r\n                    break;\r\n                default:\r\n                    break;\r\n\r\n            }\r\n\r\n            props.onDrop(\r\n                e,\r\n                newItem\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isCloneable) return;\r\n        droppables.forEach(el => subjx(el).clone(cloneConfig));\r\n        setAsCloneable(true);\r\n    }, [droppables, isCloneable, cloneConfig]);\r\n\r\n    return (\r\n        <List>\r\n            {items.map(([text, Icon]) => (\r\n                <ListItem\r\n                    data-type={text}\r\n                    ref={(el) => droppables.push(el)}\r\n                    button\r\n                    key={text}\r\n                >\r\n                    <ListItemIcon>\r\n                        <Icon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={text} />\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default EditorItems;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport {\n    TextField,\n    Checkbox,\n    FormGroup,\n    FormControlLabel,\n    FormControl,\n    Divider,\n    Typography,\n    Grid,\n    Slider\n} from '@material-ui/core';\n\nimport {\n    setEditorPaperSize,\n    setAllowDragging,\n    setAllowResizing,\n    setAllowRotating,\n    setAllowProportions,\n    setAllowRestrictions,\n    setSnapSteps,\n    setEditorGridSize\n} from '../../actions';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: '#fdfdfd',\n        zIndex: 999\n    },\n    container: {\n        display: 'flex',\n        flex: 1\n    },\n    containerColumn: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    padding: {\n        padding: 10\n    },\n    label: {\n        paddingLeft: 10\n    }\n}));\n\nconst TextInput = withStyles({\n    root: {\n        margin: 10,\n        '& .MuiOutlinedInput-input': {\n            padding: '10px 10px'\n        }\n    }\n})(TextField);\n\nconst CheckboxLabel = withStyles({\n    root: {\n        margin: '0'\n    }\n})(FormControlLabel);\n\nconst mapStateToProps = (state) => ({\n    editorPaperSize: state.editorPaperSize,\n    allowDragging: state.allowDragging,\n    allowResizing: state.allowResizing,\n    allowRotating: state.allowRotating,\n    allowProportions: state.allowProportions,\n    allowRestrictions: state.allowRestrictions,\n    snapSteps: state.snapSteps,\n    editorGridSize: state.editorGridSize,\n    eventBus: state.eventBus\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    $setEditorPaperSize: (act) => dispatch(setEditorPaperSize(act)),\n    $setAllowDragging: (act) => dispatch(setAllowDragging(act)),\n    $setAllowResizing: (act) => dispatch(setAllowResizing(act)),\n    $setAllowRotating: (act) => dispatch(setAllowRotating(act)),\n    $setAllowProportions: (act) => dispatch(setAllowProportions(act)),\n    $setAllowRestrictions: (act) => dispatch(setAllowRestrictions(act)),\n    $setSnapSteps: (act) => dispatch(setSnapSteps(act)),\n    $setEditorGridSize: (act) => dispatch(setEditorGridSize(act))\n});\n\nconst EditorSettings = (props) => {\n    const classes = useStyles();\n\n    const {\n        editorPaperSize: { width, height },\n        allowDragging,\n        allowResizing,\n        allowRotating,\n        allowProportions,\n        allowRestrictions,\n        editorGridSize,\n        snapSteps\n    } = props;\n\n    const [paperSize, setPaperSize] = useState({ width, height });\n    const [dragging, setDragging] = useState(allowDragging);\n    const [resizing, setResizing] = useState(allowResizing);\n    const [rotating, setRotating] = useState(allowRotating);\n    const [proportions, setProportions] = useState(allowProportions);\n    const [restrictions, setRestrictions] = useState(allowRestrictions);\n    const [snap, setSnap] = useState(snapSteps);\n\n\n    const handleChange = ([w, h]) => {\n        if (Number(w) < 1 || Number(h) < 1) return;\n\n        const editorPaperSize = { width: w, height: h };\n        setPaperSize(editorPaperSize);\n        props.$setEditorPaperSize({ editorPaperSize });\n    };\n\n    const handleSettings = (name) => (e) => {\n        const value = e.target.checked;\n\n        switch (name) {\n\n            case 'drag': {\n                setDragging(value);\n                props.$setAllowDragging({ allowDragging: value });\n                break;\n            }\n\n            case 'resize': {\n                setResizing(value);\n                props.$setAllowResizing({ allowResizing: value });\n                break;\n            }\n\n            case 'rotate': {\n                setRotating(value);\n                props.$setAllowRotating({ allowRotating: value });\n                break;\n            }\n\n            case 'proportions': {\n                setProportions(value);\n                props.$setAllowProportions({ allowProportions: value });\n                break;\n            }\n\n            case 'restrictions': {\n                setRestrictions(value);\n                props.$setAllowRestrictions({ allowRestrictions: value });\n                break;\n            }\n\n        }\n    };\n\n    const handleSnapChange = (value) => {\n        const snapValues = { ...snap, ...value };\n        setSnap(snapValues);\n        props.$setSnapSteps({ snapSteps: snapValues });\n    };\n\n    return (\n        <div\n            className={classes.root}\n            style={{ width: props.width }}\n        >\n            <FormControl component='fieldset'>\n                <FormGroup aria-label='position'>\n                    <div className={classes.padding}>\n                        <Typography className={classes.label} variant='subtitle1' align='left'>Canvas</Typography>\n                        <div className={classes.container}>\n                            <TextInput label='width' value={paperSize.width} variant='outlined' size='small' onChange={(e) => handleChange([e.target.value, paperSize.height])} />\n                            <TextInput label='height' value={paperSize.height} variant='outlined' size='small' onChange={(e) => handleChange([paperSize.width, e.target.value])} />\n                        </div>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Typography className={classes.label} variant='subtitle1' align='left'>Grid size</Typography>\n                                <div style={{ display: 'flex', alignItems: 'center', padding: '0 10px' }}>\n                                    <Slider valueLabelDisplay='auto' value={editorGridSize} onChange={(e, val) => props.$setEditorGridSize({ editorGridSize: val })} step={10} />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <Divider />\n                    <div className={classes.padding}>\n                        <Typography className={classes.label} variant='subtitle1' align='left'>Effects</Typography>\n                        <div className={classes.containerColumn}>\n                            <CheckboxLabel\n                                value={dragging}\n                                control={<Checkbox checked={dragging} color='primary' onChange={handleSettings('drag')} />}\n                                label='Allow dragging'\n                                labelPlacement='end'\n                            />\n                            <CheckboxLabel\n                                value={resizing}\n                                control={<Checkbox checked={resizing} color='primary' onChange={handleSettings('resize')} />}\n                                label='Allow resizing'\n                                labelPlacement='end'\n                            />\n                            <CheckboxLabel\n                                value={rotating}\n                                control={<Checkbox checked={rotating} color='primary' onChange={handleSettings('rotate')} />}\n                                label='Allow rotating'\n                                labelPlacement='end'\n                            />\n                            <CheckboxLabel\n                                value={proportions}\n                                control={<Checkbox checked={proportions} color='primary' onChange={handleSettings('proportions')} />}\n                                label='Keep aspect ratio'\n                                labelPlacement='end'\n                            />\n                            <CheckboxLabel\n                                value={restrictions}\n                                control={<Checkbox checked={restrictions} color='primary' onChange={handleSettings('restrictions')} />}\n                                label='Activate bounding area'\n                                labelPlacement='end'\n                            />\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.padding}>\n                        <Typography className={classes.label} variant='subtitle1' align='left'>Snap</Typography>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <TextInput label='grid step x' value={snap.x} variant='outlined' size='small' onChange={(e) => handleSnapChange({ x: Number(e.target.value) })} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextInput label='grid step y' value={snap.y} variant='outlined' size='small' onChange={(e) => handleSnapChange({ y: Number(e.target.value) })} />\n                            </Grid>\n                        </Grid>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <TextInput label='snap angle' value={snap.angle} variant='outlined' size='small' onChange={(e) => handleSnapChange({ angle: Number(e.target.value) })} />\n                            </Grid>\n                        </Grid>\n                    </div>\n                </FormGroup>\n            </FormControl>\n        </div>\n    );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorSettings);","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport parse from 'html-react-parser';\r\nimport { saveAs } from 'file-saver';\r\nimport 'construct-style-sheets-polyfill';\r\n\r\nimport {\r\n    Drawer,\r\n    AppBar,\r\n    CssBaseline,\r\n    Divider,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nimport EditorCanvas from './EditorCanvas';\r\nimport EditorToolbar from './EditorToolbar';\r\nimport EditorMenu from './EditorMenu';\r\nimport EditorItems from './EditorItems';\r\nimport EditorSettings from './EditorSettings';\r\n\r\nconst allowedSvgs = [\r\n    'g', 'rect', 'path', 'polygon', 'polyline',\r\n    'circle', 'ellipse', 'text', 'line', 'foreighobject'\r\n];\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: 46,\r\n        minHeight: 'calc(100vh - 46px)',\r\n        height: 'calc(100vh - 46px)',\r\n        justifyItems: 'center',\r\n        backgroundColor: '#e6e5e5'\r\n    },\r\n    menu: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        height: 46,\r\n        width: '100%',\r\n        zIndex: 999,\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    canvas: {\r\n        flexGrow: 1\r\n        // overflow: 'hidden auto'\r\n    },\r\n    canvasContainer: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    appBar: {\r\n        borderTop: '1px solid #fff',\r\n        color: 'rgba(0,0,0,0.65)',\r\n        backgroundColor: 'rgb(230 229 229)',\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        position: 'relative',\r\n        height: 46\r\n    },\r\n    appBarShift: {\r\n        // marginLeft: drawerWidth,\r\n        // width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        })\r\n    },\r\n    menuButton: {\r\n        marginRight: 36\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        backgroundColor: '#fdfdfd'\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        })\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1\r\n        }\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1)\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst Editor = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const [leftOffset, setLeftOffset] = useState(57);\r\n    const [content, setContent] = useState(null);\r\n\r\n    const parsedStyleSheet = new CSSStyleSheet();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const getStyleRule = (className) => {\r\n        let cssText = {};\r\n        const classes = parsedStyleSheet.rules || parsedStyleSheet.cssRules;\r\n        for (let x = 0; x < classes.length; x++) {\r\n            if (classes[x].selectorText === className) {\r\n                for (let index = 0; index < classes[x].style.length; index++) {\r\n                    const propertyName = classes[x].style.item(index);\r\n                    cssText = {\r\n                        ...cssText,\r\n                        [propertyName]: classes[x].style[propertyName]\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return cssText;\r\n    };\r\n\r\n    const parserOptions = {\r\n        replace(domNode) {\r\n            if (domNode.name === 'style') {\r\n                const styleSheet = new CSSStyleSheet();\r\n                styleSheet.replace(domNode.children[0].data);\r\n\r\n                [...styleSheet.rules].map((rule) => (\r\n                    parsedStyleSheet.insertRule(rule.cssText, parsedStyleSheet.cssRules.length)\r\n                ));\r\n\r\n                return <></>;\r\n            }\r\n\r\n            if (domNode.name === 'use') {\r\n                const ref = domNode.attribs['xlink:href'] || domNode.attribs.href;\r\n\r\n                if (!ref) return domNode;\r\n                const source = domNode.parent.children.find((childNode) => {\r\n                    return childNode.attribs && ('#' + childNode.attribs.id === ref);\r\n                });\r\n            }\r\n\r\n            if (domNode.type === 'tag' && allowedSvgs.indexOf(domNode.name) !== -1) {\r\n                domNode.attribs = domNode.attribs || {};\r\n\r\n                const { class: className = '' } = domNode.attribs;\r\n\r\n                if (domNode.name === 'g') {\r\n                    domNode.attribs = {\r\n                        ...domNode.attribs,\r\n                        ...getStyleRule(`.${domNode.attribs.class}`),\r\n                        class: `layer ${className}`\r\n                    };\r\n                } else {\r\n                    domNode.attribs = {\r\n                        ...domNode.attribs,\r\n                        ...getStyleRule(`.${domNode.attribs.class}`),\r\n                        class: className\r\n                    };\r\n                }\r\n            }\r\n            return domNode;\r\n        }\r\n    };\r\n\r\n    const handleImport = (res) => {\r\n        let reactSVGEl = parse(res, parserOptions);\r\n\r\n        if (Array.isArray(reactSVGEl)) {\r\n            reactSVGEl = reactSVGEl.find(item => (\r\n                typeof item === 'object' && item.type === 'svg'\r\n            ));\r\n        }\r\n\r\n        const element = document.createElement('div');\r\n        \r\n        // this is a temporary decision to convert html to dom\r\n        // maybe in the future it is need to use react way to import complex html tree\r\n        ReactDOM.render(reactSVGEl, element, () => {\r\n            setContent(element.childNodes[0]);\r\n            ReactDOM.unmountComponentAtNode(element);\r\n        });\r\n    };\r\n\r\n    const handleExport = () => {\r\n        const rootSVG = document.getElementById('editor-canvas');\r\n        const [width, height] = ['width', 'height'].map((attr) => (\r\n            rootSVG.getAttributeNS(null, attr)\r\n        ));\r\n\r\n        const rootHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">\r\n            ${document.getElementById('editable-content').innerHTML}\r\n        </svg>`;\r\n\r\n        const blob = new Blob([rootHTML]);\r\n        saveAs(blob, `export_${(new Date()).toISOString()}.svg`);\r\n    };\r\n\r\n    const handleClearArea = () => {\r\n        setContent(!Boolean(content));\r\n    };\r\n\r\n    const appendNewItem = (_, [tagName, attrs]) => {\r\n        const newNode = document.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n\r\n        Object.entries(attrs).forEach(([attr, value]) => {\r\n            newNode.setAttribute(attr, value);\r\n        });\r\n\r\n        document.querySelector('#editable-content').appendChild(newNode);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLeftOffset(open ? drawerWidth : 57);\r\n    }, [open]);\r\n\r\n    return (\r\n        // <div style={{ paddingTop: '60px' }}></div>\r\n        <div>\r\n            <div className={classes.menu}>\r\n                <EditorMenu\r\n                    onImport={handleImport}\r\n                    onExport={handleExport}\r\n                    onClearArea={handleClearArea}\r\n                />\r\n            </div>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <Drawer\r\n                    open={open}\r\n                    variant='permanent'\r\n                    className={clsx(classes.drawer, {\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open\r\n                    })}\r\n                    classes={{\r\n                        paper: clsx(classes.drawerPaper, {\r\n                            [classes.drawerOpen]: open,\r\n                            [classes.drawerClose]: !open\r\n                        })\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {\r\n                                theme.direction === 'rtl'\r\n                                    ? <ChevronRightIcon />\r\n                                    : <ChevronLeftIcon />\r\n                            }\r\n                        </IconButton>\r\n                        <IconButton\r\n                            color='inherit'\r\n                            aria-label='open drawer'\r\n                            onClick={handleDrawerOpen}\r\n                            edge='start'\r\n                            className={clsx({\r\n                                [classes.hide]: open\r\n                            })}\r\n                        >\r\n                            <ChevronRightIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <EditorItems onDrop={appendNewItem} />\r\n                    <Divider />\r\n                </Drawer>\r\n                <div className={classes.canvasContainer}>\r\n                    <AppBar\r\n                        // position='fixed'\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: open\r\n                        })}\r\n                    >\r\n                        <EditorToolbar />\r\n                    </AppBar>\r\n                    {/* <div className={classes.content}> */}\r\n                    <div style={{ position: 'relative', height: '100%' }}>\r\n                        <EditorCanvas\r\n                            leftOffset={leftOffset}\r\n                            topOffset={87}\r\n                            rightOffset={drawerWidth}\r\n                            mouseAction='edit'\r\n                        >\r\n                            {content}\r\n                        </EditorCanvas>\r\n                        <EditorSettings width={drawerWidth} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Editor;","import React from 'react';\r\nimport Editor from './editor';\r\n\r\nexport default function Main() {\r\n    return (\r\n        <Editor />\r\n    );\r\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport './App.css';\nimport store from './store';\nimport Main from './components/Main';\n\nconst outerTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0c9696',\n            auxiliary: '#0a7e95',\n            contrastText: '#fff'\n        },\n        secondary: {\n            main: '#43a047'\n        },\n        error: {\n            main: '#f33732',\n            hover: '#b71c1c'\n        },\n        warning: {\n            main: '#f57c00',\n            hover: '#ffa726'\n        },\n        text: {\n            primary: 'rgba(0, 0, 0, 0.87)',\n            secondary: 'rgba(0, 0, 0, 0.54)'\n        },\n        disabled: {\n            primary: '#1b202a',\n            secondary: '#757575'\n        }\n    },\n    typography: {\n        fontSize: 14,\n        fontWeight: 'normal',\n        fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,' +\n            '\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif',\n        subtitle1: {\n            fontSize: 12,\n            fontWeight: 400\n        },\n        h6: {\n            fontSize: 18,\n            fontWeight: 400,\n            lineHeight: 1.5\n        },\n        h5: {\n            fontSize: 20,\n            fontWeight: 400\n        },\n        h4: {\n            fontSize: 22,\n            fontWeight: 400\n        },\n        overline: {\n            color: '#546e7a',\n            fontSize: 11,\n            fontWeight: 500,\n            lineHeight: '13px'\n        },\n        caption: {\n            fontSize: '0.8rem',\n            fontWeight: 400\n        }\n    },\n    MuiPaper: {\n        rounded: {\n            borderRadius: '0.2rem'\n        },\n        elevation1: {\n            boxShadow: '0 1px 5px 0 rgba(0,0,0,0.16), 0 1px 5px 0 rgba(0,0,0,0.12)'\n        },\n        elevation2: {\n            boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)'\n        },\n        elevation4: {\n            boxShadow: '0 5px 10px -5px rgba(0,0,0,0.5)'\n        }\n    }\n});\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={outerTheme}>\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </ThemeProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}